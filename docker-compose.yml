version: '3.8'

services:
  db:
    image: postgres:14
    container_name: storyum_db
    environment:
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    expose:
      - "${POSTGRES_PORT:-5432}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - inner

  redis:
    image: redis:6
    container_name: storyum_redis
    environment:
      - REDIS_PORT
    expose:
      - "${REDIS_PORT:-6379}"
    networks:
      - inner

  web:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: storyum_web
    command: gunicorn config.wsgi:application --bind 0.0.0.0:${WEB_PORT:-8000}
    env_file:
      - .env
    expose:
      - "${WEB_PORT:-8000}"
    depends_on:
      - db
      - redis
    networks:
      - inner
      - outer

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: storyum_nginx
    environment:
      - NGINX_PORT
      - WEB_PORT
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
    depends_on:
      - web
    networks:
      - outer

  rabbitmq:
    image: rabbitmq:3-management
    container_name: storyum_rabbitmq
    environment:
      - RABBITMQ_SERVER_PORT
      - RABBITMQ_MANAGEMENT_PORT
    expose:
      - "${RABBITMQ_SERVER_PORT:-5672}"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}"
    networks:
      - inner

  celery:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: storyum_celery
    command: celery -A config worker -l info
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - rabbitmq
    networks:
      - inner

volumes:
  postgres_data:


networks:
  inner:
    driver: bridge
  outer:
    driver: bridge
